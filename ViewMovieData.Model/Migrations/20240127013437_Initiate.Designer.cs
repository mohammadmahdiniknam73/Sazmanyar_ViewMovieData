// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViewMovieData.Model.Data;

#nullable disable

namespace ViewMovieData.Model.Migrations
{
    [DbContext(typeof(ApllicationDbContext))]
    [Migration("20240127013437_Initiate")]
    partial class Initiate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ViewMovieData.Model.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Film-Noir"
                        },
                        new
                        {
                            Id = 12,
                            Name = "History"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Musical"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 20,
                            Name = "War"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("ViewMovieData.Model.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOutNow")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("VideoTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("VideoTypeId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            IsOutNow = true,
                            Name = "Movie 1",
                            ProductionDate = new DateOnly(2022, 1, 1),
                            VideoTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            IsOutNow = false,
                            Name = "Movie 2",
                            ProductionDate = new DateOnly(2023, 2, 2),
                            VideoTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            IsOutNow = true,
                            Name = "Movie 3",
                            ProductionDate = new DateOnly(2024, 3, 3),
                            VideoTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 4,
                            IsOutNow = false,
                            Name = "Movie 4",
                            ProductionDate = new DateOnly(2022, 1, 4),
                            VideoTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 5,
                            IsOutNow = true,
                            Name = "Movie 5",
                            ProductionDate = new DateOnly(2022, 1, 5),
                            VideoTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 1,
                            IsOutNow = false,
                            Name = "Movie 6",
                            ProductionDate = new DateOnly(2022, 1, 6),
                            VideoTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 2,
                            IsOutNow = true,
                            Name = "Movie 7",
                            ProductionDate = new DateOnly(2022, 1, 7),
                            VideoTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 3,
                            IsOutNow = false,
                            Name = "Movie 8",
                            ProductionDate = new DateOnly(2022, 1, 8),
                            VideoTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 4,
                            IsOutNow = true,
                            Name = "Movie 9",
                            ProductionDate = new DateOnly(2022, 1, 9),
                            VideoTypeId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 5,
                            IsOutNow = false,
                            Name = "Movie 10",
                            ProductionDate = new DateOnly(2022, 1, 10),
                            VideoTypeId = 5
                        });
                });

            modelBuilder.Entity("ViewMovieData.Model.Models.VideoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VideoTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Feature Film"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Short Film"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Animated Film"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Experimental Film"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Commercial"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Music Video"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Educational Film"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TV Show"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Web Series"
                        });
                });

            modelBuilder.Entity("ViewMovieData.Model.Models.Movie", b =>
                {
                    b.HasOne("ViewMovieData.Model.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ViewMovieData.Model.Models.VideoType", "VideoType")
                        .WithMany("Movies")
                        .HasForeignKey("VideoTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("VideoType");
                });

            modelBuilder.Entity("ViewMovieData.Model.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ViewMovieData.Model.Models.VideoType", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
